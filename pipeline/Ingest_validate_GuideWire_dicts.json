{
	"name": "Ingest_validate_GuideWire_dicts",
	"properties": {
		"activities": [
			{
				"name": "Copy_data_to_staging",
				"description": "Activity to copy source data set to the staging storage",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Pipeline_Start_Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@pipeline().parameters.p_src_sql",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sqlserver_gw_open",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adslv2_PARQUET",
						"type": "DatasetReference",
						"parameters": {
							"ds_container_name": {
								"value": "@pipeline().parameters.p_stg_src_container_name",
								"type": "Expression"
							},
							"ds_folder_name": {
								"value": "@pipeline().parameters.p_stg_src_folder_name",
								"type": "Expression"
							},
							"ds_file_name": {
								"value": "@pipeline().parameters.p_stg_src_file_name",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Validate_data_types",
				"description": "Technical validation data flow. Needed to initial validation of ingested data.",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Copy_data_to_staging_Log_Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_technicalvalidation_GW_dicts",
						"type": "DataFlowReference",
						"parameters": {
							"df_src_column_list": {
								"value": "@pipeline().parameters.p_auto_src_column_list",
								"type": "Expression"
							},
							"df_src_renamed_column_list": {
								"value": "@pipeline().parameters.p_auto_src_renamed_column_list",
								"type": "Expression"
							},
							"df_tech_validation_expr": {
								"value": "@pipeline().parameters.p_auto_tech_validation_expr",
								"type": "Expression"
							},
							"df_partition_column": {
								"value": "@pipeline().parameters.p_partition_columns",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"Source": {
								"ds_container_name": {
									"value": "@pipeline().parameters.p_stg_src_container_name",
									"type": "Expression"
								},
								"ds_folder_name": {
									"value": "@pipeline().parameters.p_stg_src_folder_name",
									"type": "Expression"
								},
								"ds_file_name": {
									"value": "@pipeline().parameters.p_stg_src_file_name",
									"type": "Expression"
								}
							},
							"Target": {
								"ds_folder_name": {
									"value": "@pipeline().parameters.p_trgt_folder_name",
									"type": "Expression"
								},
								"ds_container_name": {
									"value": "@pipeline().parameters.p_trgt_container_name",
									"type": "Expression"
								}
							},
							"Error": {
								"ds_folder_name": {
									"value": "@pipeline().parameters.p_error_folder_name",
									"type": "Expression"
								},
								"ds_container_name": {
									"value": "@pipeline().parameters.p_error_container_name",
									"type": "Expression"
								}
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "integrationRuntimeManagedVN",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Pipeline_Start_Log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[meta].[p_fill_process_log]",
					"storedProcedureParameters": {
						"in_activity_type": {
							"value": "Pipeline",
							"type": "String"
						},
						"in_message": {
							"value": {
								"value": "@concat('Start of pipeline ', pipeline().Pipeline)",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_parameters": {
							"value": {
								"value": "@concat('Parameters: - p_trgt_folder_name - ',pipeline().parameters.p_trgt_folder_name,'; -p_trgt_container_name -  ',pipeline().parameters.p_trgt_container_name,'; - p_trgt_compression_type - ',pipeline().parameters.p_trgt_compression_type,'; - p_stg_src_folder_name - ',pipeline().parameters.p_stg_src_folder_name,'; - p_stg_src_file_name - ',pipeline().parameters.p_stg_src_file_name,'; -p_stg_src_container_name - ',pipeline().parameters.p_stg_src_container_name,'; - p_stg_src_compression_type - ',pipeline().parameters.p_stg_src_compression_type,'; - p_src_sql - ',pipeline().parameters.p_src_sql,'; - p_partition_columns - ',pipeline().parameters.p_partition_columns,'; - p_error_folder_name - ',pipeline().parameters.p_error_folder_name,'; - p_error_container_name - ',pipeline().parameters.p_error_container_name,'; - p_error_compression_type - ',pipeline().parameters.p_error_compression_type,'; - p_auto_tech_validation_expr - ',pipeline().parameters.p_auto_tech_validation_expr,'; - p_auto_src_renamed_column_list - ',pipeline().parameters.p_auto_src_renamed_column_list,'; - p_auto_src_column_list - ',pipeline().parameters.p_auto_src_column_list,'; - p_auto_annotation_1_string - ',pipeline().parameters.p_auto_annotation_1_string,'; - p_auto_annotation_2_string - ',pipeline().parameters.p_auto_annotation_2_string,'; - p_auto_annotation_3_string - ',pipeline().parameters.p_auto_annotation_3_string,'; - p_auto_annotation_4_string - ',pipeline().parameters.p_auto_annotation_4_string,'; - p_auto_annotation_5_string - ',pipeline().parameters.p_auto_annotation_5_string)",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_status_code": {
							"value": "START",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AzureSQL_metadataDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy_data_to_staging_Log_Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_data_to_staging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[meta].[p_fill_process_log]",
					"storedProcedureParameters": {
						"in_activity_type": {
							"value": {
								"value": "Copy activity",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_message": {
							"value": {
								"value": "@concat('Copy_data_to_staging : ', activity('Copy_data_to_staging').output)",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_parameters": {
							"value": "None",
							"type": "String"
						},
						"in_pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_status_code": {
							"value": "INFO",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AzureSQL_metadataDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy_data_to_staging_Log_fail",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_data_to_staging",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[meta].[p_fill_process_log]",
					"storedProcedureParameters": {
						"in_activity_type": {
							"value": {
								"value": "Copy data",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_message": {
							"value": {
								"value": "@concat('Error: activity Copy_data_to_stagingfailed. Output:', activity('Copy_data_to_staging').Error.Message)",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_parameters": {
							"value": "None",
							"type": "String"
						},
						"in_pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_status_code": {
							"value": "FINISHED WITH ERRORS",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AzureSQL_metadataDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Validate_data_types_Log_Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Validate_data_types",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[meta].[p_fill_process_log]",
					"storedProcedureParameters": {
						"in_activity_type": {
							"value": "Data flow",
							"type": "String"
						},
						"in_message": {
							"value": {
								"value": "@concat('Pipeline execution finished successfully. ', activity('Validate_data_types').output)",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_parameters": {
							"value": "None",
							"type": "String"
						},
						"in_pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_status_code": {
							"value": "FINISHED",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AzureSQL_metadataDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Validate_data_types_Log_Fail",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Validate_data_types",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[meta].[p_fill_process_log]",
					"storedProcedureParameters": {
						"in_activity_type": {
							"value": "Data flow",
							"type": "String"
						},
						"in_message": {
							"value": {
								"value": "@concat('Error: activity Validate_data_types. Output:', activity('Validate_data_types').Error.Message)",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_pipeline_parameters": {
							"value": "None",
							"type": "String"
						},
						"in_pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"in_status_code": {
							"value": "FINISHED WITH ERRORS",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AzureSQL_metadataDB",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"p_src_sql": {
				"type": "string"
			},
			"p_stg_src_container_name": {
				"type": "string"
			},
			"p_stg_src_folder_name": {
				"type": "string"
			},
			"p_stg_src_file_name": {
				"type": "string"
			},
			"p_stg_src_compression_type": {
				"type": "string"
			},
			"p_trgt_container_name": {
				"type": "string"
			},
			"p_trgt_folder_name": {
				"type": "string"
			},
			"p_trgt_compression_type": {
				"type": "string"
			},
			"p_error_container_name": {
				"type": "string"
			},
			"p_error_folder_name": {
				"type": "string"
			},
			"p_error_compression_type": {
				"type": "string"
			},
			"p_auto_src_column_list": {
				"type": "string"
			},
			"p_auto_src_renamed_column_list": {
				"type": "string"
			},
			"p_auto_tech_validation_expr": {
				"type": "string"
			},
			"p_partition_columns": {
				"type": "string"
			},
			"p_auto_annotation_1_string": {
				"type": "string"
			},
			"p_auto_annotation_2_string": {
				"type": "string"
			},
			"p_auto_annotation_3_string": {
				"type": "string"
			},
			"p_auto_annotation_4_string": {
				"type": "string"
			},
			"p_auto_annotation_5_string": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Pipelines/"
		},
		"annotations": [
			"@pipeline().parameters.p_auto_annotation_1_string",
			"@pipeline().parameters.p_auto_annotation_2_string",
			"@pipeline().parameters.p_auto_annotation_3_string",
			"@pipeline().parameters.p_auto_annotation_4_string",
			"@pipeline().parameters.p_auto_annotation_5_string"
		],
		"lastPublishTime": "2021-04-23T11:19:36Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}